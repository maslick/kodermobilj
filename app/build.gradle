apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'jacoco'
apply plugin: 'com.jfrog.bintray'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias'] ?: System.getenv("keyAlias")
            keyPassword keystoreProperties['keyPassword'] ?: System.getenv("keyPassword")
            storeFile file(keystoreProperties['storeFile'] ?: "../keystore.jks")
            storePassword keystoreProperties['storePassword'] ?: System.getenv("storePassword")
        }
    }

    compileSdkVersion 27
    defaultConfig {
        applicationId "io.maslick.kodermobile"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            testCoverageEnabled true
        }

        release {
            debuggable true
            minifyEnabled true
            proguardFile 'proguard/rxjava.pro'
            proguardFile 'proguard/retrofit.pro'
            proguardFile 'proguard/app.pro'
            proguardFile getDefaultProguardFile('proguard-android.txt')
            signingConfig signingConfigs.release
            testCoverageEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/ASL2.0'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v4:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'

    // rxjava
    implementation "io.reactivex.rxjava2:rxjava:2.2.4"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.0"
    implementation "io.reactivex.rxjava2:rxkotlin:2.2.0"

    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.2.2'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.2'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-kotlin:2.2.2'

    // koin
    implementation "org.koin:koin-core:1.0.2"
    implementation "org.koin:koin-android:1.0.2"
    testImplementation "org.koin:koin-test:1.0.2"
    androidTestImplementation "org.koin:koin-test:1.0.2"

    // recycler view
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'

    // QR-code
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0@aar'
    implementation 'com.google.zxing:core:3.3.2'

    // bottom sheet
    implementation 'com.github.Kennyc1012:BottomSheet:2.4.1'
}

jacoco {
    toolVersion = '0.8.2'
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [ '**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*' ]
    def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/kotlin"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}

check.dependsOn jacocoTestReport

ext{
    bintrayUser = System.getenv('BINTRAY_USER') ?: System.getProperty("BINTRAY_USER")
    bintrayKey = System.getenv('BINTRAY_KEY') ?: System.getProperty("BINTRAY_KEY")
    buildNumber = System.getenv('TRAVIS_BUILD_NUMBER') ?: "0"
    date = new Date().format("yyyy-MM-dd_HH-mm-ss")
    appName = "kodermobile"
}

bintray {
    user = bintrayUser
    key = bintrayKey
    buildNumber = buildNumber

    filesSpec {
        from('build/outputs/apk/debug') { include '*.apk' }
        into("$appName/$date")
        from('build/outputs/apk/release') { include '*.apk' }
        into("$appName/$date")
        rename { name -> name.replace 'app', appName }
    }

    pkg {
        repo = 'generic'
        name = appName
        userOrg = 'maslick'
        desc = 'barkoder Android native app'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/maslick/kodermobilj.git'
        version {
            name = "build_$buildNumber"
            desc = "build $buildNumber"
            released = new Date()
        }
    }

    publish = true
    override = true
}